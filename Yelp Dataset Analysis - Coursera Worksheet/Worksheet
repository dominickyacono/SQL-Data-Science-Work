Author: Dominick Yacono

Data Scientist Role Play: Profiling and Analyzing a Yelp Dataset 
– Project provided by UCDavis’ SQL for Data Science class on Coursera – 
This worksheet uses a dataset from a US-based organization called Yelp, which provides a platform for users to provide reviews and rate their interactions with a variety of organizations – businesses, restaurants, health clubs, hospitals, local governmental offices, charitable organizations, etc. 
Yelp has made a portion of this data available for personal, educational, and academic purposes.
The following is a series of questions regarding the data.

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

Sample code:
Select count(*) as
Total_records
From attribute;

*(Followed this format for all tables)

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (primary key id)
ii. Hours = 1562 (foregin key business_id)
iii. Category = 2643 (foreign key business_id)
iv. Attribute = 1115 (foreign key business_id)
v. Review = 10000 (primary key id)
vi. Checkin = 493 (foreign key business_id)
vii. Photo = 10000 (primary key id)
viii. Tip =  537 (foreign key user_id), 3979 (foreign key business_id)
ix. User =  10000 (primary key id)
x. Friend = 11 (foreign key user_id)
xi. Elite_years = 2780 (foreign key user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

Sample code:
select COUNT(distinct id )
from business

*(followed this format for all tables, taking into account whether to count primary or foreign keys)


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
    select 
    sum(case when id is null then 1 else 0 end) as id_nulls, 
    sum(case when name is null then 1 else 0 end) as name_nulls, 
    sum(case when review_count is null then 1 else 0 end) as review_count_nulls,
    sum(case when yelping_since is null then 1 else 0 end) as yelping_since_nulls,
    sum(case when useful is null then 1 else 0 end) as useful_nulls,
    sum(case when funny is null then 1 else 0 end) as funny_nulls,
    sum(case when cool is null then 1 else 0 end) as cool_nulls,
    sum(case when fans is null then 1 else 0 end) as fans_nulls,
    sum(case when average_stars is null then 1 else 0 end) as average_stars_nulls,
    sum(case when compliment_hot is null then 1 else 0 end) as compliment_hot_nulls,
    sum(case when compliment_more is null then 1 else 0 end) as compliment_more_nulls,
    sum(case when compliment_profile is null then 1 else 0 end) as compliment_profile_nulls,
    sum(case when compliment_cute is null then 1 else 0 end) as compliment_cute_nulls,
    sum(case when compliment_list is null then 1 else 0 end) as compliment_list_nulls,
    sum(case when compliment_note is null then 1 else 0 end) as compliment_note_nulls,
    sum(case when compliment_plain is null then 1 else 0 end) as compliment_plain_nulls,
    sum(case when compliment_cool is null then 1 else 0 end) as compliment_cool_nulls,
    sum(case when compliment_funny is null then 1 else 0 end) as compliment_funny_nulls,
    sum(case when compliment_writer is null then 1 else 0 end) as compliment_writer_nulls,
    sum(case when compliment_photos is null then 1 else 0 end) as compliment_photos_nulls
    from user

	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		Min: 1	max: 5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		Min: 1		max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:24.2995
		
Sample code:
Select min(likes), max(likes), avg(likes) 
From Tip;

5. List the cities with the most reviews in descending order:

SQL code used to arrive at answer:
	
select city, Count(city)
from business
GROUP BY city
ORDER BY Count(city) desc 

Copy and Paste the Result Below:
+-----------------+-------------+
| city            | Count(city) |
+-----------------+-------------+
| Las Vegas       |        1561 |
| Phoenix         |        1001 |
| Toronto         |         985 |
| Scottsdale      |         497 |
| Charlotte       |         468 |
| Pittsburgh      |         353 |
| Montréal        |         337 |
| Mesa            |         304 |
| Henderson       |         274 |
| Tempe           |         261 |
| Edinburgh       |         239 |
| Chandler        |         232 |
| Cleveland       |         189 |
| Gilbert         |         188 |
| Glendale        |         188 |
| Madison         |         176 |
| Mississauga     |         150 |
| Stuttgart       |         141 |
| Peoria          |         105 |
| Markham         |          80 |
| Champaign       |          71 |
| North Las Vegas |          70 |
| North York      |          64 |
| Surprise        |          60 |
| Richmond Hill   |          54 |
+-----------------+-------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select stars, COUNT(stars)
from business
where city = 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

select stars, COUNT(stars)
from business
where city = 'Beachwood'
GROUP BY stars
 

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+


7. Find the top 3 users based on their total number of reviews:
		
SQL code used to arrive at answer:

select id, name, review_count
from user
ORDER BY review_count desc
Limit 3

		
Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+

Top 3: Gerald, Sara, Yuri


8. Does posing more reviews correlate with more fans?
Please explain your findings and interpretation of the results:

No. There are a fair number of users with few reviews but lots of fans. For example, Angela has 694 reviews and 101 fans while Nicole has 864 reviews but only 43 fans.

SQL code used to arrive at answer:

select name, review_count, fans
from user
order by review_count desc;
 
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

Answer: More reviews with the word “love”.
	
SQL code used to arrive at answer:

Select count (*) as "Reviews with word: love"
from review
where text like '%love%';

+-----------+
| count (*) |
+-----------+
|      1780 |
+-----------+

select
count (*) as "Reviews with word: hate"
from review
where text like '%hate%';

+-----------+
| count (*) |
+-----------+
|       232 |
+-----------+
	
	
10. Find the top 10 users with the most fans:

SQL code used to arrive at answer:

select id, name, fans
from user
ORDER BY fans desc
Limit 10
	
Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
Category: Food
City: Phoenix

2 - 3 stars:

select business.name, business.city, category.category, business.stars, hours.hours, business.review_count
from business
inner join category on business.id = category.business_id
inner join hours on category.business_id = hours.business_id
where city = 'Phoenix' AND category = 'Food' AND business.stars >= 2 AND business.stars <= 3
GROUP BY business.stars
 
+-----------+---------+----------+-------+---------------------+--------------+
| name      | city    | category | stars | hours               | review_count |
+-----------+---------+----------+-------+---------------------+--------------+
| Starbucks | Phoenix | Food     |   3.0 | Saturday|5:00-20:00 |           52 |
+-----------+---------+----------+-------+---------------------+--------------+

4 - 5 stars:

select business.name, business.city, category.category, business.stars, hours.hours, business.review_count
from business
inner join category on business.id = category.business_id
inner join hours on category.business_id = hours.business_id
where city = 'Phoenix' AND category = 'Food' AND business.stars >= 4 AND business.stars <= 5
GROUP BY business.stars
 
+----------------------------------------+---------+----------+-------+----------------------+--------------+
| name                                   | city    | category | stars | hours                | review_count |
+----------------------------------------+---------+----------+-------+----------------------+--------------+
| Bootleggers Modern American Smokehouse | Phoenix | Food     |   4.0 | Saturday|11:00-22:00 |          431 |
+----------------------------------------+---------+----------+-------+----------------------+--------------+
+--------------+---------+------------------------------------------------------+----------+-------+----------------------+--------------+

i. Do the two groups you chose to analyze have a different distribution of hours?
Yes. Starbucks opens earlier at 5:00 AM while Bootleggers Smokehouse opens at 11:00 AM. Bootleggers Smokehouse closes later in the evening at 10:00 PM, while Starbucks closes earlier in the evening at 8:00 PM.

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes. Starbucks only has 52 reviews while Bootleggers Smokehouse has 431 reviews.
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Restaurants that are still open have higher average stars. 
+---------------------+---------+
| AVG(business.stars) | is_open |
+---------------------+---------+
|       3.52039473684 |       0 |
|       3.67900943396 |       1 |
+---------------------+---------+

select AVG(business.stars), business.is_open
from business
GROUP BY is_open
             
ii. Difference 2: Restaurants with a higher review count are more likely to be open.

+---------+----------------------------+
| is_open | AVG(business.review_count) |
+---------+----------------------------+
|       0 |              23.1980263158 |
|       1 |              31.7570754717 |
+---------+----------------------------+

select business.is_open, AVG(business.review_count)
from business
GROUP BY is_open
	
	
3. For this last part of your analysis, you are going to choose analyses you want to conduct on the Yelp dataset and are going to prepare the data.
	
i. Indicate the analyses you chose to do:
Analysis 1: In the Yelp data given, each user star rating has a text review alongside it. I chose to analyze the user sentiment behind each text review and see if it is correlated with its star rating. My results show that they are. As user reviews show more negative sentiment and contain words such as “hated”, there is a significant likelihood of the star rating being 1 (the lowest rating). On the opposite side of the spectrum, as user reviews show more positive sentiment and contain words such as “amazing”, the likelihood of the star rating being close to 5 (the best rating) is high.
Analysis 2: For each different star rating, I analyzed what the average rating of the business was that the person gave a rating for. I found that as individual user star ratings increase towards 5, the average rating of the businesses also increased.  
Analysis 3: For each different star rating, I counted the number of businesses that are still open. I found that as the individual user star ratings increase towards 5, the likelihood that the businesses these ratings are given to are still presently open increases. 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
Analysis 1: To conduct this analysis, I needed to collect data from the review table. I used SQL’s wildcard text analysis feature to determine customer sentiment through the text reviews. I counted the number of reviews with “good” sentiment and those with “bad” sentiment and grouped them depending on the star rating tied to the review. 
Analysis 2: I collected data from the review and the business tables, conducting an inner join on review’s business_id and business’ id. I chose data from these two tables to uncover the relationship between star ratings and average business ratings.  
Analysis 3: I collected data from the review and the business tables, conducting an inner join on review’s business_id and business’ id. I chose data from these two tables to uncover the relationship between star ratings and the likelihood of the business still being open. 

iii. Output of your finished dataset:
Analysis 1:
+-----------------------------+---------------------------------------------------+----------------------------------------------------+----------------------------------------------------------+
| review rating from customer | number of reviews where text shows good sentiment | number of reviewers where text shows bad sentiment | Ratio of good sentiment reviews to bad sentiment reviews |
+-----------------------------+---------------------------------------------------+----------------------------------------------------+----------------------------------------------------------+
|                           1 |                                                24 |                                                140 |                                                        0 |
|                           2 |                                                38 |                                                 37 |                                                        1 |
|                           3 |                                                63 |                                                 16 |                                                        3 |
|                           4 |                                               202 |                                                 18 |                                                       11 |
|                           5 |                                               736 |                                                  6 |                                                      122 |
+-----------------------------+---------------------------------------------------+----------------------------------------------------+----------------------------------------------------------+
Analysis 2:
+-----------------------------+-------------------------------------------------------+
| review rating from customer | Average rating of the business person gave rating for |
+-----------------------------+-------------------------------------------------------+
|                           1 |                                         3.02906976744 |
|                           2 |                                         3.46153846154 |
|                           3 |                                         3.55479452055 |
|                           4 |                                         3.65666666667 |
|                           5 |                                         4.10181818182 |
+-----------------------------+-------------------------------------------------------+
Analysis 3:
+-----------------------------+--------------------------------------------------------+
| review rating from customer | Business that are still open that received this rating |
+-----------------------------+--------------------------------------------------------+
|                           1 |                                                     86 |
|                           2 |                                                     52 |
|                           3 |                                                     73 |
|                           4 |                                                    150 |
|                           5 |                                                    275 |
+-----------------------------+--------------------------------------------------------+


iv. Provide the SQL code you used to create your final dataset:

Analysis 1: 

select
review.stars AS 'review rating from customer',
SUM (CASE WHEN text like '%amazing%' then 1 ELSE 0 END) AS 'number of reviews where text shows good sentiment', 
SUM (CASE WHEN text LIKE '%horrible%' then 1 ELSE 0 END) AS 'number of reviewers where text shows bad sentiment',
SUM (CASE WHEN text like '%amazing%' then 1 ELSE 0 END)/SUM (CASE WHEN text LIKE '%horrible%' then 1 ELSE 0 END) AS 'Ratio of good sentiment reviews to bad sentiment reviews'
from review
GROUP BY review.stars

Analysis 2:

select
review.stars AS 'review rating from customer',
AVG(business.stars) AS 'Average rating of the business person gave rating for'
from review
INNER JOIN business ON review.business_id = business.id
GROUP BY review.stars

Analysis 3:

select
review.stars AS 'review rating from customer',
COUNT(business.is_open) AS 'Business that are still open that received this rating'
from review
INNER JOIN business ON review.business_id = business.id
GROUP BY review.stars
